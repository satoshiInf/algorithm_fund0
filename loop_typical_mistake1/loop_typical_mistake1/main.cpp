/*
 
 とても良い着眼点です。`while` や `for` の条件式やループ内の変数の動作に関して、「見落としやすい」「抜けやすい」ポイントを以下にリストアップします。C++を前提としますが、他のC系言語（C、Java、C#など）でも通用します。

 ---

 ## ✅ 見落としやすい `for` / `while` の仕様と落とし穴

 ---

 ### 1. **条件に使われた変数の値はループを抜けた後も保持される**

 ```cpp
 int i = 0;
 while (i < 5) {
     ++i;
 }
 std::cout << i << "\n"; // → 5（ループ終了時の状態）
 ```

 * **重要**：`i` の値はループ後も変更されたまま。

 ---

 ### 2. **`for` の変数スコープの違いに注意**

 ```cpp
 for (int i = 0; i < 3; ++i) {}
 // ここで i は使えない（ブロック内スコープ）

 int i;
 for (i = 0; i < 3; ++i) {}
 // ここで i は使える（外で定義してるから）
 ```

 * **落としやすい**：`for (int i...)` の `i` はループの外には出ない。

 ---

 ### 3. **無限ループになる原因：更新処理忘れ**

 ```cpp
 int i = 0;
 while (i < 5) {
     // i++; を忘れると無限ループ！
 }
 ```

 * `i` の更新処理を忘れると条件が永遠に `true`。

 ---

 ### 4. **`break` や `continue` の位置でロジックが崩れる**

 ```cpp
 for (int i = 0; i < 10; ++i) {
     if (i == 5) break; // 0〜4までしか回らない
 }
 ```

 * `continue` はスキップして次のループに進む。
 * `break` は完全にループを終了する。

 ---

 ### 5. **浮動小数点の比較でループが止まらないことがある**

 ```cpp
 for (float x = 0.0; x != 1.0; x += 0.1) {
     // 無限ループになる可能性がある
 }
 ```

 * 浮動小数点誤差で `x == 1.0` にならないことがある。

 ---

 ### 6. **ループ変数の型が意図とずれると無限ループに**

 ```cpp
 unsigned int i = 10;
 while (i >= 0) {
     std::cout << i << "\n";
     --i;
 }
 // 無限ループ！i は符号なしなので負にならず 4294967295 になる
 ```

 ---

 ### 7. **`do...while` の最初の1回は必ず実行される**

 ```cpp
 int x = 100;
 do {
     std::cout << "Hello\n";
 } while (x < 0);  // 条件 false でも一度は実行される
 ```

 * ループ条件が false でも1回は必ず入るのが `do-while`。

 ---

 ### 8. **`while(cin >> x)` などは `EOF` や不正入力で終了する**

 ```cpp
 int x;
 while (std::cin >> x) {
     // 正しく整数が入力されたときだけ実行される
 }
 ```

 * `ctrl + D`（UNIX）や `ctrl + Z`（Windows）で `EOF` になる。
 * 文字など不正な入力で `cin.fail()` が true になり、ループが終了。

 ---

 ### 9. **for文の初期化・条件・更新が省略できることに注意**

 ```cpp
 for (;;) {
     // 無限ループ
 }
 ```

 * 3つ全て省略すると `while(true)` と同じ。

 ---

 ## 🔖 補足：ループ後の変数の利用は注意

 ```cpp
 int i = 0;
 for (; i < 3; ++i) {}
 std::cout << i << "\n";  // i = 3 → ループを抜けた時点の値
 ```

 * **重要**：ループがどの条件で終了したかを後で確認する際にこのように使う。
 * ただし `for (int i = 0...)` のようにスコープが限られると使えない。

 ---

 必要であれば、これらを **1ページの復習シート** にまとめることもできます。希望があれば言ってください。

 */

#include <iostream>

int main(int argc, const char * argv[]) {
    // insert code here...
    std::cout << "Hello, World!\n";
    return 0;
}
