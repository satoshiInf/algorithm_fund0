//
//  main.cpp
//  PassingByPointer8
//
//  Created by Satoshi on 7/16/25.
//


/*
 int x =100;
 int*p = &x;
 int** pp =&p;
 
 &pがあったらそれ自体のアドレス
 &ppがあったらそれ自体のアドレス
 pだったら矢印先のアドレス　＆x
 ppだったら矢印先のアドレス　＆p。ppが指し示すのは一個先のpなので（ int** pp =&p;なので）　pp＝＆p
 
 　　x
 　　　　　　↑　**pp
 　　p
*pp ↑　　　↑
　 　pp　→
 
 p=&x;
 pp = &p;
 *p =x;
 *pp = p;
 **pp = *(*pp)= *p =x
 
 
 
 */

#include <iostream>

void setNum(int **pp)
{
    //関数の関係から
    //**pp　＝&p
    //**ppは、pのアドレスを指し示す.
    //


}

int main() {

    //PassingByPointer4
    
    //ダブルポインター
    int arr2[3] = {100,200,300};
    //pはarr2のアドレスを指し示す
    int *p = arr2;
    setNum(&p);
    //&pはpのアドレスを指し示す
}

/*
 | 宣言          | 型の意味                 | 例          |
 | ----------- | -------------------- | ---------- |
 | `int x;`    | 普通の整数変数              | `x = 10;`  |
 | `int* p;`   | 整数を指すポインタ（1段階）       | `p = &x;`  |
 | `int** pp;` | ポインタを指すポインタ（2段階＝ダブル） | `pp = &p;` |

 | 式      | 意味                    | 型       |
 | ------ | --------------------- | ------- |
 | `x`    | 整数の変数（42が入ってる）        | `int`   |
 | `p`    | `x` のアドレスを保持するポインタ    | `int*`  |
 | `pp`   | `p` のアドレスを保持するダブルポインタ | `int**` |
 | `*pp`  | `p`（ポインタ）そのもの         | `int*`  |
 | `**pp` | `x` の値（つまり 42）        | `int`   |

 
 左がアドレス、右が値
 [ x ] = 42
    ↑
 [ p ] = &x, pはxのアドレス
    ↑
 [ pp ] = &p　＊ppは[p]のアドレス:p, *pp =p,  **pp= *p =x

 int
 
 */
